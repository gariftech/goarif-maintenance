---
name: Build and Push Image to GCP
on:
  push:
    tags:
      - "*"

jobs:
  build-push-goarif:
    name: Build and Push to GCP ( Go Arif )
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: maintenance
      PROJECT_ID: goarif-c-and-js
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Github Tag Go Arif Version
        id: latestTag
        run: |-
          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "GOARIF_VERSION=goarif-${{ github.ref_name }}" >> $GITHUB_ENV
  
      - name: Google Cloud Platform Auth
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"

      - name: "Set up Cloud SDK"
        uses: google-github-actions/setup-gcloud@v1

      - name: Build Docker Image
        run: |-
          docker build -f Dockerfile.goarif -t $IMAGE_NAME:goarif .

      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker asia-southeast2-docker.pkg.dev --quiet

      - name: Push Docker Image to Artifact Registry
        run: |-
          docker tag $IMAGE_NAME:goarif asia-southeast2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:goarif
          docker tag $IMAGE_NAME:goarif asia-southeast2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:${{ env.GOARIF_VERSION }}
          docker push asia-southeast2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:goarif
          docker push asia-southeast2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:${{ env.GOARIF_VERSION }}

      - name: Call Webhook
        uses: joelwmale/webhook-action@2.3.2
        env:
          IMAGE_REGISTRY: Google Cloud Artifact
          IMAGE_REPOSITORY: asia-southeast2-docker.pkg.dev/${{ env.PROJECT_ID }}/images/${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ env.GOARIF_VERSION }}
        with:
          url: ${{ secrets.WEBHOOK_URL }}/api/v1/workflow-github?telegram_chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&registry=Google Cloud Platform
          body: '{"push_data":{"tag":"${{ env.IMAGE_TAG }}"},"repository":{"name":"${{ env.IMAGE_REPOSITORY }}"}}'

  build-push-orison-tech:
    name: Build and Push to GCP ( Orison Tech )
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: maintenance
      PROJECT_ID: goarif-c-and-js
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Github Tag Orison Tech Version
        id: latestTag
        run: |-
          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "ORISON_TECH_VERSION=orison-tech-${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Google Cloud Platform Auth
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"

      - name: "Set up Cloud SDK"
        uses: google-github-actions/setup-gcloud@v1

      - name: Build Docker Image
        run: |-
          docker build -f Dockerfile.orisontech -t $IMAGE_NAME:orison-tech .

      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker asia-southeast2-docker.pkg.dev --quiet

      - name: Push Docker Image to Artifact Registry
        run: |-
          docker tag $IMAGE_NAME:orison-tech asia-southeast2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:orison-tech
          docker tag $IMAGE_NAME:orison-tech asia-southeast2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:${{ env.ORISON_TECH_VERSION }}
          docker push asia-southeast2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:orison-tech
          docker push asia-southeast2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:${{ env.ORISON_TECH_VERSION }}

      - name: Call Webhook
        uses: joelwmale/webhook-action@2.3.2
        env:
          IMAGE_REGISTRY: Google Cloud Artifact
          IMAGE_REPOSITORY: asia-southeast2-docker.pkg.dev/${{ env.PROJECT_ID }}/images/${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ env.ORISON_TECH_VERSION }}
        with:
          url: ${{ secrets.WEBHOOK_URL }}/api/v1/workflow-github?telegram_chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&registry=Google Cloud Platform
          body: '{"push_data":{"tag":"${{ env.IMAGE_TAG }}"},"repository":{"name":"${{ env.IMAGE_REPOSITORY }}"}}'
